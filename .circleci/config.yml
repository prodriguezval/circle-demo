# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
executors:
  docker-builder:
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  BuildImage:
    executor: docker-builder
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Building project image"
          command: "docker build -t ${CIRCLE_PROJECT_REPONAME}:latest ."
      - run:
          name: "Archive Docker image"
          command: "docker save -o image.tar ${CIRCLE_PROJECT_REPONAME}:latest"
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  Compile:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: "docker load -i /tmp/workspace/image.tar"
      - run:
          name: "Compiling"
          command: "docker run ${CIRCLE_PROJECT_REPONAME}:latest ./mvnw clean compile"
  Test:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: "docker load -i /tmp/workspace/image.tar"
      - run:
          name: "Testing"
          command: "docker run ${CIRCLE_PROJECT_REPONAME}:latest ./mvnw clean test"

  Package:
    executor: docker-builder
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Install Heroku"
          command: "curl https://cli-assets.heroku.com/install.sh | sh"
      - run:
          name: "Renaming Dockerfile"
          command: "mv Dockerfile.runtime Dockerfile"
      - run:
          name: "Logging to heroku container registry"
          command: "heroku container:login"
      - run:
          name: "pushing image in to heroku registry"
          command: "heroku container:push web -a ${HEROKU_APP_NAME}"
  Security:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: "docker load -i /tmp/workspace/image.tar"
      - run:
          name: "Packaging application"
          command: "docker run --name ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_PROJECT_REPONAME}:latest bash -c './mvnw clean package -Dmaven.test.skip=true' && docker cp ${CIRCLE_PROJECT_REPONAME}:/app ."
      - run:
          name: "Running security checks"
          command: |
            docker create -v /application --name app alpine:3.4 /bin/true
            docker cp app/. app:/application
            docker run --rm --volumes-from app bash -c 'ls -la /application && hawkeyesec/scanner-cli -t /application'
  Deploy:
    executor: docker-builder
    steps:
      - setup_remote_docker
      - run:
          name: "Install Heroku"
          command: "curl https://cli-assets.heroku.com/install.sh | sh"
      - run:
          name: "Logging to heroku container registry"
          command: "heroku container:login"
      - run:
          name: "Releasing the newest image in the registry"
          command: "heroku container:release web -a ${HEROKU_APP_NAME}"

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  CI:
    jobs:
      - BuildImage
      - Compile:
          requires:
            - BuildImage
      - Test:
          requires:
            - Compile
      - Package:
          requires:
            - Test
      - Security:
          requires:
            - Test
      - Deploy:
          requires:
            - Security
            - Package
          filters:
            branches:
              only: master